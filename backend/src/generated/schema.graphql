### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Conversation implements Node {
  createdAt: DateTime!
  creator: User!

  """Relay ID"""
  id: ID!
  messageConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): MessageConnection!
  participantConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): ParticipantConnection!
  title: String!
  updatedAt: DateTime!
}

type ConversationConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ConversationEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ConversationEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Conversation!
}

type ConversationSubscriptionPayload {
  conversationId: ID!
  message: Message!
}

input CreateConversationInput {
  participantIds: [ID!]
  title: String!
}

type CreateConversationPayload {
  conversation: Conversation!
}

input CreateMessageInput {
  conversationId: ID!
  message: String!
}

type CreateMessagePayload {
  conversationId: ID!
  message: Message!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input InvitePeopleInput {
  conversationId: ID!
  participantIds: [ID!]!
}

type InvitePeoplePayload {
  conversation: Conversation!
  conversationId: ID!
  participantIds: [ID!]!
}

input LoginInput {
  email: String!
  password: String!
}

type Message implements Node {
  conversation: Conversation!
  createdAt: DateTime!

  """Relay ID"""
  id: ID!
  message: String!
  sender: User!
  updatedAt: DateTime!
}

type MessageConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [MessageEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type MessageEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Message!
}

type Mutation {
  createConversation(input: CreateConversationInput!): CreateConversationPayload!
  createMessage(input: CreateMessageInput!): CreateMessagePayload!
  invitePeople(input: InvitePeopleInput!): InvitePeoplePayload!
  login(input: LoginInput!): AuthPayload!
  removePeople(input: RemovePeopleInput!): RemovePeoplePayload!
  signup(input: SignupInput!): AuthPayload!
}

interface Node {
  """Relay ID"""
  id: ID!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Participant implements Node {
  conversation: Conversation!
  createdAt: DateTime!

  """Relay ID"""
  id: ID!
  updatedAt: DateTime!
  user: User!
}

type ParticipantConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ParticipantEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ParticipantEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Participant!
}

type Query {
  conversationConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): ConversationConnection!
  node(id: ID!): Node!
  nodes(ids: [ID!]!): [Node!]!
  userConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): UserConnection!
}

input RemovePeopleInput {
  conversationId: ID!
  participantIds: [ID!]!
}

type RemovePeoplePayload {
  conversation: Conversation!
  conversationId: ID!
  participantIds: [ID!]!
}

input SignupInput {
  avatar: String
  email: String!
  name: String
  password: String!
}

type Subscription {
  conversation: ConversationSubscriptionPayload!
}

type User implements Node {
  avatar: String
  conversationConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): ConversationConnection!
  createdAt: DateTime!
  email: String!

  """Relay ID"""
  id: ID!
  name: String
  updatedAt: DateTime!
}

type UserConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type UserEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: User!
}
